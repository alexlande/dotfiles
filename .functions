# Start an HTTP server from a directory, optionally specifying the port
function server() {
	local port="${1:-8000}"
	open "http://localhost:${port}/"
	# Set the default Content-Type to `text/plain` instead of `application/octet-stream`
	# And serve everything as UTF-8 (although not technically correct, this doesnâ€™t break anything for binary files)
	python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
}

# Syntax-highlight JSON strings or files
function json() {
	if [ -p /dev/stdin ]; then
		# piping, e.g. `echo '{"foo":42}' | json`
		python -mjson.tool | pygmentize -l javascript
	else
		# e.g. `json '{"foo":42}'`
		python -mjson.tool <<< "$*" | pygmentize -l javascript
	fi
}

# get gzipped size
function gz() {
	echo "orig size    (bytes): "
	cat "$1" | wc -c
	echo "gzipped size (bytes): "
	gzip -c "$1" | wc -c
}

# toggle dotfiles in finder
function dotfiles() {
	# check if hidden files are visible and store result in a variable
	isVisible="$(defaults read com.apple.finder AppleShowAllFiles)"

	# toggle visibility based on variables value
	if [ "$isVisible" = false ]
	then
	defaults write com.apple.finder AppleShowAllFiles true
	else
	defaults write com.apple.finder AppleShowAllFiles false
	fi

	# force changes by restarting Finder
	killall Finder
}

# base encode and copy to clipboard
function base64() {
	openssl enc -base64 -in $1 | tr -d '\n' | pbcopy
}
